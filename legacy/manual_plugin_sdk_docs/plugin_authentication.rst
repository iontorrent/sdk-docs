
==================================================
Authentication to Torrent Server API from a plugin
==================================================

Session based authentication
----------------------------

When interacting with the REST API in the context of a config.html, instance.html, or report output.html file, access to
the Torrent Server REST API is done using the session cookie of the currently authenticated user. No additional steps are necessary.

Plugin temporary use token
--------------------------

At plugin runtime, a plugin no longer has API access via the logged in user. A short-lived api_key is generated by the
plugin framework for use while a plugin is running. This key is specific to the plugin instance, and cannot be reused
once the plugin exits. The 'username' here is the pluginresult id, the password is a plugin instance specific api_key
(both are found in startplugin.json).

These are used as query parameters::

    GET /rundb/api/v1/results/?format=json&pluginresult=123&api_key=af3cf75bbf7d1208e1132036a081994c7b70ebe9

Or, as an http header using the "PluginKey" authorization type::

    Authorization: PluginKey 123:af3cf75bbf7d1208e1132036a081994c7b70ebe9
    Content-Type: application/json
    GET /rundb/api/v1/results/


Using an User API Token
-----------------------

For access to the Torrent Suite from outside systems (perhaps triggered by a plugin) the temporary authentication token
will not work. You can find an authentication token which is tied to a specific Torrent Browser user account at the Account
configuration page (/configure/account/), or via the REST API at  /rundb/api/v1/account/?format=json.
Both methods require authentication to access, and return the token associated with the currently logged in user.


The api_key is used by appending username and api_key values to the GET or POST request, as in:
POST /rundb/api/v1/results/?format=json&username=ionuser&api_key=af3cf75bbf7d1208e1132036a081994c7b70ebe9

Or, as an http header::
    Authorization: ApiKey ionuser:af3cf75bbf7d1208e1132036a081994c7b70ebe9
    Content-Type: application/json

Your username and api_key will be different, of course.

*Basic Auth*
------------

Lastly, the system supports standard name and password Basic Authentication. To access resources using Basic Authentication,
supply the username:password pair in the URL (``http://username:passwd@torrentserver/rundb/api/v1/``) or in an
Authorization basic header.

.. note:: REST API will prompt for basic auth (401 Unauthorized response) which often results in a UI prompt for user/pass
    in the client. Files and other TS pages will not prompt for this (returning a 302 Found redirect to the login page instead),
    however they do accept "Forced Auth" where the client sends the user/password Authorization header preemptively.


Most analysis report content can be accessed using Basic Authentication if the URL is prefixed with '/auth/'. For example,
to access the url "/output/Home/Report_0001/log.txt", use Basic Authentication with the URL "/auth/output/Home/Report_0001/log.txt".

Pre-emptive (forced) basic auth using http headers::

    Content-Type: application/json
    Authorization: Basic aW9udXNlcjppb251c2Vy

The encoded value is ``b64encode("ionuser:ionuser")``. Adjust to match your password.
